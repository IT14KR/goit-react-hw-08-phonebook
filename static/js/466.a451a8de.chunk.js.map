{"version":3,"file":"static/js/466.a451a8de.chunk.js","mappings":"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","sources":["components/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 400px;\n  padding: 10px;\n  margin: 0 auto;\n`;\n\nexport const Wrapper = styled.div`\n  text-align: center;\n  font-size: 20px;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n`;\n\nexport const SubTitle = styled.h2`\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  border: 3px solid #0080ff;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  color: #ffd700;\n  font-size: 20px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 12px;\n  font: inherit;\n  cursor: pointer;\n`;\n\nexport const Button = styled.button`\n  font: inherit;\n  padding: 8px 12px;\n  cursor: pointer;\n  border: 3px solid #0080ff;\n  border-radius: 4px;\n  color: #ffd700;\n  font-size: 20px;\n`;\n","import { useState } from 'react';\nimport { Button, Form, Input, Label } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'components/redux/selectors';\nimport { addContact } from 'components/services/Api';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isInContacts = contacts.find(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n\n    if (isInContacts) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Label>Number</Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  list-style: none;\n  border: 3px solid #0080ff;\n  border-radius: 4px;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 10px;\n  margin-bottom: 5px;\n  border: 3px solid #0080ff;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  font: inherit;\n  padding: 4px 8px;\n  cursor: pointer;\n  border: 3px solid #0080ff;\n  border-radius: 4px 8px;\n`;\n","import React from 'react';\nimport { Button, Item, List } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'components/redux/selectors';\nimport { deleteContact } from 'components/services/Api';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const handelDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n  const visibleContacts = getVisibleContacts();\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <Item key={contact.id}>\n          {contact.name + ' : ' + contact.number}\n\n          <Button\n            type=\"button\"\n            name=\"delete\"\n            onClick={() => handelDeleteContact(contact.id)}\n          >\n            delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapp = styled.div`\n  margin-bottom: 15px;\n`;\n\nexport const Label = styled.label`\n  color: #000;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  padding: 10px;\n  margin: 0 auto;\n  border-radius: 4px;\n  border: 3px solid #0080ff;\n`;\n","import React from 'react';\nimport { Input, Label, Wrapp } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { addFilter } from 'components/redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const changeFilter = event => {\n    dispatch(addFilter(event.target.value.trim()));\n  };\n\n  return (\n    <Wrapp>\n      <Label>\n        Find contacts by name\n        <Input type=\"text\" onChange={changeFilter} />\n      </Label>\n    </Wrapp>\n  );\n};\n","import { Container, SubTitle, Title, Wrapper } from 'components/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectContacts } from 'components/redux/selectors';\nimport { useEffect } from 'react';\n\nconst { fetchContacts } = require('components/services/Api');\nconst { useDispatch, useSelector } = require('react-redux');\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n\n      <ContactForm />\n\n      <SubTitle>Contacts</SubTitle>\n      {contacts.length > 0 ? (\n        <Filter />\n      ) : (\n        <Wrapper>Your phonebook is empty. Add first contact!</Wrapper>\n      )}\n      {contacts.length > 0 && <ContactList />}\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","Wrapper","_templateObject2","Title","_templateObject3","SubTitle","_templateObject4","Form","Label","Input","Button","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","handleChange","event","_event$target","target","value","_jsxs","onSubmit","preventDefault","find","contact","toLowerCase","trim","alert","concat","addContact","children","_jsx","type","onChange","pattern","title","required","List","Item","ContactList","filter","selectFilter","visibleContacts","normalizedFilter","includes","getVisibleContacts","map","onClick","contactId","id","deleteContact","Wrapp","Filter","addFilter","fetchContacts","require","_require2","useEffect","length"],"sourceRoot":""}